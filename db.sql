DROP TABLE Product IF EXISTS;
DROP TABLE Orders IF EXISTS;
DROP TABLE Reservation IF EXISTS;
DROP TABLE Carte IF EXISTS;
DROP TABLE Users IF EXISTS;
DROP TABLE Course IF EXISTS;
DROP TABLE Room IF EXISTS;
DROP TABLE Parking IF EXISTS;
DROP TABLE Club IF EXISTS;

DROP DOMAIN roles IF EXISTS;
DROP DOMAIN genders IF EXISTS;
DROP DOMAIN status_enum IF EXISTS;
DROP DOMAIN room_types IF EXISTS;
DROP DOMAIN course_types IF EXISTS;

CREATE DOMAIN roles as VARCHAR(20) CHECK(VALUE IN ('external', 'simple', 'premium', 'coach'));
CREATE DOMAIN genders as VARCHAR(20) CHECK(VALUE IN ('M', 'F'));
CREATE DOMAIN status_enum as VARCHAR(20) CHECK(VALUE IN ('confimed', 'cancelled', 'ended'));
CREATE DOMAIN room_types as VARCHAR(20) CHECK(VALUE IN ('normal', 'special'));
CREATE DOMAIN course_types as VARCHAR(20) CHECK(VALUE IN ('normal', 'special'));


CREATE TABLE Club (
    id		INTEGER generated by default as identity (start with 1, increment by 1) NOT NULL,
    name	VARCHAR(30) 	NOT NULL,
    adress 	VARCHAR(50)	NOT NULL,
    city 	VARCHAR(30) 	NOT NULL,
    PRIMARY KEY (id)
  );

CREATE TABLE Parking (
    id		INTEGER generated by default as identity (start with 1, increment by 1) NOT NULL,
    capacity	INTEGER 	NOT NULL,
    club_id 	INTEGER 	NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (club_id) REFERENCES Club(id)
  );

CREATE TABLE Room (
    id		INTEGER generated by default as identity (start with 1, increment by 1) NOT NULL,
    type	room_types 	NOT NULL,
    club_id	INTEGER		NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (club_id) REFERENCES Club(id)
  );

CREATE TABLE Course (
    id		INTEGER generated by default as identity (start with 1, increment by 1) NOT NULL,
    type 	course_types 	NOT NULL,
    date_ 	DATE		NOT NULL,
    start_time	time		NOT NULL,
    end_time 	time 		NOT NULL,
    room_id	int 		NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (room_id) REFERENCES Room(id)
  );

CREATE TABLE Users (
    id	      INTEGER generated by default as identity (start with 1, increment by 1) NOT NULL,
    firstname	VARCHAR(30)     NOT NULL,
    surname	VARCHAR(30)     NOT NULL,
    role	roles		NOT NULL,
    gender	genders,
    phone	VARCHAR(10),
    mail	VARCHAR(30)	NOT NULL,
    login 	VARCHAR(30)	NOT NULL,
    password_	VARCHAR(30)	NOT NULL,
    PRIMARY KEY (id)
  );
  
CREATE TABLE Carte (
    id		INTEGER generated by default as identity (start with 1, increment by 1) NOT NULL,
    start_date		DATE	NOT NULL,
    expiration_date	DATE	NOT NULL,
    user_id    		INTEGER		NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (user_id) REFERENCES Users(id)
  );


CREATE TABLE Reservation (
    id 		INTEGER generated by default as identity (start with 1, increment by 1) NOT NULL,
    status	status_enum	NOT NULL,
    course_id	INTEGER		NOT NULL,
    carte_id	INTEGER		NOT NULL,
    parking_id	INTEGER,
    PRIMARY KEY (id),
    FOREIGN KEY (course_id) REFERENCES Course(id),
    FOREIGN KEY (carte_id) REFERENCES Carte(id),
    FOREIGN KEY (parking_id) REFERENCES Parking(id),
  );

CREATE TABLE Orders (
    id		INTEGER generated by default as identity (start with 1, increment by 1) NOT NULL,
    quantity		INTEGER		NOT NULL,
    created_at		DATE		NOT NULL,
    adress	    	VARCHAR(50)	NOT NULL,
    user_id		INTEGER	NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (user_id) REFERENCES Users(id)
  );

CREATE TABLE Product (
    id		INTEGER generated by default as identity (start with 1, increment by 1) NOT NULL,
    name	VARCHAR(30)	NOT NULL,
    price	DOUBLE	NOT NULL,
    stock    	INTEGER	NOT NULL,
    description VARCHAR(100)		NOT NULL,
    order_id	INTEGER	NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (order_id) REFERENCES Orders(id)
  );
  
COMMIT;
